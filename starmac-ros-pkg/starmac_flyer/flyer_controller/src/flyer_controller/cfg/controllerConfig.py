## *********************************************************
## 
## File autogenerated for the flyer_controller package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

config_description = [{'srcline': 14, 'description': 'Proportional gain', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/controller.cfg', 'name': 'KP', 'edit_method': '', 'default': 15.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 15, 'description': 'Integral gain', 'max': 2.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/controller.cfg', 'name': 'KI', 'edit_method': '', 'default': 1.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 16, 'description': 'Derivative gain', 'max': 30.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/controller.cfg', 'name': 'KD', 'edit_method': '', 'default': 15.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 17, 'description': 'Command frame (internal/external)', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '../cfg/controller.cfg', 'name': 'command_frame', 'edit_method': "{'enum_description': 'Enum to set the command frame.', 'enum': [{'srcline': 11, 'description': 'internal frame', 'srcfile': '../cfg/controller.cfg', 'cconsttype': 'const char * const', 'value': 'internal', 'ctype': 'std::string', 'type': 'str', 'name': 'internal'}, {'srcline': 12, 'description': 'external frame', 'srcfile': '../cfg/controller.cfg', 'cconsttype': 'const char * const', 'value': 'external', 'ctype': 'std::string', 'type': 'str', 'name': 'external'}]}", 'default': 'internal', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 18, 'description': 'Heading [deg] that external command frame points to', 'max': 359.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/controller.cfg', 'name': 'external_frame_heading', 'edit_method': '', 'default': 0.0, 'level': 0, 'min': 0.0, 'type': 'double'}]

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

for param in config_description:
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

controller_internal = 'internal'
controller_external = 'external'
